name: 自动部署no-anime-no-life
# 在特定 tag 被 push 以后被触发
on:
  push:
    branches:
      - master
    # tags:
    #   - 'v*.*.*'
jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      # # checkout 代码
      # - uses: actions/checkout@v2
      # # 创建 env 文件
      # # build docker image
      # # start the app
      # - name: 'create env file'
      #   run: |
      #     touch .env
      #     echo ALC_ACCESS_KEY=${{ secrets.ALC_ACCESS_KEY }} >> .env
      #     echo ALC_SECRET_KEY=${{ secrets.ALC_SECRET_KEY }} >> .env
      #     echo NANF_API_BASE_URL=${{ secrets.NANF_API_BASE_URL }} >> .env
      #     echo NANF_HOST=${{ secrets.NANF_HOST }} >> .env
      # # 拷贝必须文件到一个文件夹，包括 .env, docker-compose.yml, mongo-entrypoint
      # - name: 'copy necessary files in to one folder'
      #   run: |
      #     mkdir no-anime-no-life
      #     cp .env docker-compose.yml no-anime-no-life
      #     ls -a no-anime-no-life
      # # 通过 scp 拷贝必须文件到服务器
      # - name: 'copy no-anime-no-life folder via scp'
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     port: ${{ secrets.SSH_PORT }}
      #     username: ${{ secrets.SSH_USER }}
      #     password: ${{ secrets.SSH_PWD }}
      #     source: 'no-anime-no-life'
      #     target: '~/project'
      # 通过 SSH 登录
      - name: executing ssh and restart docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PWD }}
          script_stop: true
          # * 登录阿里云 ACR
          script: |
            cd ~/project/no-anime-no-life/
            git pull
            npm run build
            ./server.sh
